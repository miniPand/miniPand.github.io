(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{509:function(e,a,t){"use strict";t.r(a);var r=t(8),_=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建"}},[e._v("#")]),e._v(" 环境搭建")]),e._v(" "),t("h3",{attrs:{id:"_1-环境准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境准备"}},[e._v("#")]),e._v(" 1.环境准备")]),e._v(" "),t("p",[e._v("下载jdk最好是Oracle的 配置Java环境")]),e._v(" "),t("p",[e._v("下载zookeeper并解压")]),e._v(" "),t("p",[e._v("关闭防火墙")]),e._v(" "),t("p",[e._v("配置环境变量")]),e._v(" "),t("p",[e._v("vi /etc/profile")]),e._v(" "),t("p",[e._v("export ZOOKEEPER_HOME = 安装地址")]),e._v(" "),t("p",[e._v("export PATH =$PATH:$ZOOKEEPER/bin")]),e._v(" "),t("h3",{attrs:{id:"_2-修改配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改配置文件"}},[e._v("#")]),e._v(" 2.修改配置文件")]),e._v(" "),t("p",[e._v("通过模板文件cp出zoo.cfg")]),e._v(" "),t("p",[e._v("tickTime：心跳时间,默认2000ms即2s,所有zookeeper的时间都以tickTime的倍数表示，客户端与服务器或服务器与服务器之间维持心跳，每隔1个tickTime时间就会发送一次心跳")]),e._v(" "),t("p",[e._v("initLimit：初始连接时，从服务器同步到主服务器的最大心跳数，数值为tickTime的倍数")]),e._v(" "),t("p",[e._v("syncLimit：主从服务器之间请求/应答的最大心跳数，数值为tickTime的倍数")]),e._v(" "),t("p",[e._v("dataDir：必配，存储数据的目录")]),e._v(" "),t("p",[e._v("dataLogDir：可配可不配，不配的话默认和dataDir目录一致，表示存储日志的目录")]),e._v(" "),t("p",[e._v("如果需要加载集群追加以下内容")]),e._v(" "),t("p",[e._v("server.A=B：C：D")]),e._v(" "),t("p",[e._v("server.1=edu-zk-01:2881:3881")]),e._v(" "),t("p",[e._v("server.2=edu-zk-02:2882:3882")]),e._v(" "),t("p",[e._v("server.3=edu-zk-03:2883:3883")]),e._v(" "),t("p",[e._v("A是一个数字,表示这个是第几号服务器")]),e._v(" "),t("p",[e._v("B是这个服务器的IP地址（或者是与IP地址做了映射的主机名）")]),e._v(" "),t("p",[e._v("C第一个端口用来集群成员的信息交换,表示这个服务器与集群中的Leader服务器交换信息的端口")]),e._v(" "),t("p",[e._v("D是在leader挂掉时专门用来进行选举leader所用的端口")]),e._v(" "),t("h3",{attrs:{id:"_3-在datadir-path下创建myid文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-在datadir-path下创建myid文件"}},[e._v("#")]),e._v(" 3.在dataDir=PATH下创建myid文件")]),e._v(" "),t("p",[e._v("编辑 myid文件，并在对应的 IP的机器上输入对应的编号。如在 node-01上，myid文件内容就是1,node-02上就是2，node-03上就是3")]),e._v(" "),t("h2",{attrs:{id:"zookeeper简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper简介"}},[e._v("#")]),e._v(" Zookeeper简介")]),e._v(" "),t("h3",{attrs:{id:"_1-zk简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-zk简介"}},[e._v("#")]),e._v(" 1.zk简介")]),e._v(" "),t("p",[e._v("zk有三种角色\nleander:负责给follow数据同步,负责数据的增删改\nfollow:负责处理client请求,参与leander竞选\nobserver:负责处理client查询请求,不参与Leander竞选")]),e._v(" "),t("h3",{attrs:{id:"_2-生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-生命周期"}},[e._v("#")]),e._v(" 2.生命周期")]),e._v(" "),t("p",[e._v("client发送查询请求到observer或者follow会带参数是否需要同步,是的话请求Leander更新最新数据.否则直接返回\nclient发送修改请求到follow\n1.follow转发到leander.leander会存储到队列中.\n2.leander队列中有数据就会取出数据给follow走投票,投票过半通过发送给所有follow修改操作.\n3.follow返回leander一个ok值并告诉客户端")]),e._v(" "),t("h3",{attrs:{id:"_3-选举过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-选举过程"}},[e._v("#")]),e._v(" 3.选举过程")]),e._v(" "),t("p",[e._v("1.3888造成两两通讯\n2.发起投票投自己\n3.接受其他节点的投票信息\n4.节点PK,首先判断zxid,其次判断myid,取大的,如果自己小取消投票\n5.统计投票\n6.leader改变状态")])])}),[],!1,null,null,null);a.default=_.exports}}]);